{
  description = "Home configuration of nixos";
  # alternative to an overlay for a module
  inputs = {
    #inputs.config.url = "self";
    nixpkgs.url = "https://flakehub.com/f/NixOS/nixpkgs/0.2305.*.tar.gz";
    # org-moderncv.url ="https://github.com/DCsunset/org-moderncv/archive/refs/tags/v0.2.0.tar.gz";
    home-manager = {
      url = "github:nix-community/home-manager/release-23.05";
      inputs.nixpkgs.follows = "nixpkgs";
    };
    guix-overlay.url = github:foo-dogsquared/nix-overlay-guix;
    nurpkgs.url = github:nix-community/NUR;
    # nixos-auto-update.url ="github:mudrii/nixos-sys-auto-update/main";
  };

  outputs = inputs @ { self, nixpkgs, nurpkgs, guix-overlay, home-manager }:
  let
    system = "x86_64-linux";
    username = "dev";
    homeDirectory = "/home/${username}";
    configHome = "${homeDirectory}/.config";
    nixSettings = { config, lib, pkgs, ... }: {
      # Setting each of the flake inputs as part of the system registry
      # including our own flake which is just renamed from "self" to
      # "config".
      nix.registry =
        lib.mapAttrs'
          (name: flake:
            let
              name' = if (name == "self") then "config" else name;
            in
            lib.nameValuePair name' { inherit flake; })
          inputs;
    };
  in
    {

    homeConfigurations = {
      "dev" = inputs.home-manager.lib.homeManagerConfiguration {
        pkgs = import nixpkgs {
          inherit system;
          config.allowUnfree = true;
          config.xdg.configHome = configHome;
          overlays = [
            nurpkgs.overlay
            #inputs.guix-overlay.overlays.default
          ];
        };

        modules = [
          ./home.nix
          nixSettings

          {
            home = {
              username = "dev";
              homeDirectory = "/home/dev";
              stateVersion = "23.05";
            };
          }

        ];
      };
    };

    };

}
#   main = home-manager.lib.homeManagerConfiguration rec {
  #

  #     stateVersion = "23.05";
  #     #could be a module , so can be confguration.nix
  #     configuration = import ./home.nix {
    #       inherit nur pkgs;
    #       inherit (pkgs) config lib stdenv;
    #     };
    #   };
    # };
    #}
